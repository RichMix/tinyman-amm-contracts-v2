#pragma version 7
txn ApplicationID
pushint 0
==
bz l0_end
pushbytes "fee_setter"
txn Sender
app_global_put
pushbytes "fee_collector"
txn Sender
app_global_put
pushbytes "fee_manager"
txn Sender
app_global_put
pushint 1
return
l0_end: // end
txn OnCompletion
pushint 0 // NoOp
==
bnz main
txn OnCompletion
pushint 1 // OptIn
==
bnz bootstrap
txn OnCompletion
pushint 2 // CloseOut
==
bnz handle_closeout
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz handle_updateapp
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz handle_deleteapp
err // unexpected value
handle_updateapp:
pushint 0
return
handle_deleteapp:
pushint 0
return
handle_closeout:
pushint 0
return
bootstrap:
txna ApplicationArgs 0
pushbytes "bootstrap"
==
assert
txn RekeyTo
global CurrentApplicationAddress
==
assert
txna Assets 0
store 0 // asset_1_id
txna Assets 1
store 1 // asset_2_id
load 0 // asset_1_id
load 1 // asset_2_id
>
assert
txn Sender
store 2 // pool_address
load 0 // asset_1_id
asset_params_get AssetUnitName
store 3 // exists
store 4 // asset_1_unit_name
load 3 // exists
assert
load 0 // asset_1_id
asset_params_get AssetTotal
pop // discarding value for _
store 6 // asset_total
load 6 // asset_total
pushint 10000 // ASSET_MIN_TOTAL
>=
assert
load 1 // asset_2_id
pushint 0
==
bz l1_else
pushbytes "ALGO"
store 5 // asset_2_unit_name
b l1_end
l1_else:
load 1 // asset_2_id
asset_params_get AssetUnitName
store 3 // exists
store 5 // asset_2_unit_name
load 3 // exists
assert
load 1 // asset_2_id
asset_params_get AssetTotal
pop // discarding value for _
store 6 // asset_total
load 6 // asset_total
pushint 10000 // ASSET_MIN_TOTAL
>=
assert
l1_end: // end
pushbytes "TinymanPool2.0 "
load 4 // asset_1_unit_name
pushbytes "-"
concat
load 5 // asset_2_unit_name
concat
concat
store 7 // pool_token_asset_name
pushbytes "\x06\x80\x18\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x81\x00[5\x004\x001\x18\x12D1\x19\x81\x01\x12D\x81\x01C" // POOL_TEMPLATE
global CurrentApplicationID
itob
replace2 3
store 8 // program
load 8 // program
load 0 // asset_1_id
itob
replace2 11
store 8 // program
load 8 // program
load 1 // asset_2_id
itob
replace2 19
store 8 // program
load 2 // pool_address
pushbytes "Program"
load 8 // program
concat
sha512_256
==
assert
load 0 // asset_1_id
itob
load 1 // asset_2_id
itob
pushint 16
bzero
concat
concat
store 9 // metadata_hash
itxn_begin
pushint 1 // Pay
itxn_field TypeEnum
load 2 // pool_address
itxn_field Sender
global CurrentApplicationAddress
itxn_field Receiver
pushint 100000
itxn_field Amount
pushint 0
itxn_field Fee
itxn_submit
itxn_begin
pushint 3 // Acfg
itxn_field TypeEnum
global CurrentApplicationAddress
itxn_field Sender
pushbytes "TMPOOL2"
itxn_field ConfigAssetUnitName
load 7 // pool_token_asset_name
itxn_field ConfigAssetName
pushint 18446744073709551615 // POOL_TOKEN_TOTAL_SUPPLY
itxn_field ConfigAssetTotal
pushint 6
itxn_field ConfigAssetDecimals
pushbytes "https://tinyman.org"
itxn_field ConfigAssetURL
load 2 // pool_address
itxn_field ConfigAssetReserve
load 9 // metadata_hash
itxn_field ConfigAssetMetadataHash
pushint 0
itxn_field Fee
itxn_submit
itxn CreatedAssetID
store 10 // pool_token_asset_id
itxn_begin
pushint 4 // Axfer
itxn_field TypeEnum
load 2 // pool_address
itxn_field Sender
load 2 // pool_address
itxn_field AssetReceiver
load 0 // asset_1_id
itxn_field XferAsset
pushint 0
itxn_field Amount
pushint 0
itxn_field Fee
itxn_submit
load 1 // asset_2_id
pushint 0
>
bz l2_end
itxn_begin
pushint 4 // Axfer
itxn_field TypeEnum
load 2 // pool_address
itxn_field Sender
load 2 // pool_address
itxn_field AssetReceiver
load 1 // asset_2_id
itxn_field XferAsset
pushint 0
itxn_field Amount
pushint 0
itxn_field Fee
itxn_submit
l2_end: // end
itxn_begin
pushint 4 // Axfer
itxn_field TypeEnum
load 2 // pool_address
itxn_field Sender
load 2 // pool_address
itxn_field AssetReceiver
load 10 // pool_token_asset_id
itxn_field XferAsset
pushint 0
itxn_field Amount
pushint 0
itxn_field Fee
itxn_submit
itxn_begin
pushint 4 // Axfer
itxn_field TypeEnum
global CurrentApplicationAddress
itxn_field Sender
load 2 // pool_address
itxn_field AssetReceiver
load 10 // pool_token_asset_id
itxn_field XferAsset
pushint 18446744073709551615 // POOL_TOKEN_TOTAL_SUPPLY
itxn_field AssetAmount
pushint 0
itxn_field Fee
itxn_submit
pushint 0
pushbytes "asset_1_id"
load 0 // asset_1_id
app_local_put
pushint 0
pushbytes "asset_2_id"
load 1 // asset_2_id
app_local_put
pushint 0
pushbytes "pool_token_asset_id"
load 10 // pool_token_asset_id
app_local_put
pushint 0
pushbytes "total_fee_share"
pushint 30
app_local_put
pushint 0
pushbytes "protocol_fee_ratio"
pushint 6
app_local_put
pushint 0
pushbytes "asset_1_reserves"
pushint 0
app_local_put
pushint 0
pushbytes "asset_2_reserves"
pushint 0
app_local_put
pushint 0
pushbytes "issued_pool_tokens"
pushint 0
app_local_put
pushint 0
pushbytes "asset_1_protocol_fees"
pushint 0
app_local_put
pushint 0
pushbytes "asset_2_protocol_fees"
pushint 0
app_local_put
pushint 0
pushbytes "lock"
pushint 0
app_local_put
pushint 0
pushbytes "asset_1_cumulative_price"
pushbytes "\x00\x00\x00\x00\x00\x00\x00\x00" // BYTE_ZERO
app_local_put
pushint 0
pushbytes "asset_2_cumulative_price"
pushbytes "\x00\x00\x00\x00\x00\x00\x00\x00" // BYTE_ZERO
app_local_put
pushint 0
pushbytes "cumulative_price_update_timestamp"
global LatestTimestamp
app_local_put
pushint 1
return
main:
txn Sender
store 0 // user_address
txna ApplicationArgs 0
pushbytes "set_fee_collector"
==
bnz main__set_fee_collector
txna ApplicationArgs 0
pushbytes "set_fee_setter"
==
bnz main__set_fee_setter
txna ApplicationArgs 0
pushbytes "set_fee_manager"
==
bnz main__set_fee_manager
txna ApplicationArgs 0
pushbytes "claim_fees"
==
bnz main__claim_fees
txna ApplicationArgs 0
pushbytes "claim_extra"
==
bnz main__claim_extra
txna ApplicationArgs 0
pushbytes "set_fee"
==
bnz main__set_fee
b main__amm // else
main__set_fee_collector:
load 0 // user_address
pushbytes "fee_manager"
app_global_get
==
assert
pushbytes "fee_collector"
txna Accounts 1
app_global_put
pushint 1
return
main__set_fee_setter:
load 0 // user_address
pushbytes "fee_manager"
app_global_get
==
assert
pushbytes "fee_setter"
txna Accounts 1
app_global_put
pushint 1
return
main__set_fee_manager:
load 0 // user_address
pushbytes "fee_manager"
app_global_get
==
assert
pushbytes "fee_manager"
txna Accounts 1
app_global_put
pushint 1
return
main__claim_fees:
txna Accounts 1
store 1 // pool_address
pushint 1
pushbytes "asset_1_id"
app_local_get
store 2 // asset_1_id
pushint 1
pushbytes "asset_2_id"
app_local_get
store 3 // asset_2_id
pushint 1
pushbytes "asset_1_protocol_fees"
app_local_get
store 4 // asset_1_protocol_fees
pushint 1
pushbytes "asset_2_protocol_fees"
app_local_get
store 5 // asset_2_protocol_fees
load 4 // asset_1_protocol_fees
load 5 // asset_2_protocol_fees
||
assert
load 2 // asset_1_id
load 4 // asset_1_protocol_fees
load 1 // pool_address
pushbytes "fee_collector"
app_global_get
callsub __func__transfer
load 3 // asset_2_id
load 5 // asset_2_protocol_fees
load 1 // pool_address
pushbytes "fee_collector"
app_global_get
callsub __func__transfer
pushint 1
pushbytes "asset_1_protocol_fees"
pushint 0
app_local_put
pushint 1
pushbytes "asset_2_protocol_fees"
pushint 0
app_local_put
pushint 1
return
main__claim_extra:
txna Accounts 1
store 1 // pool_address
pushint 1
pushbytes "asset_1_id"
app_local_get
store 2 // asset_1_id
pushint 1
pushbytes "asset_2_id"
app_local_get
store 3 // asset_2_id
pushint 1
load 2 // asset_1_id
callsub __func__get_balance
pushint 1
pushbytes "asset_1_reserves"
app_local_get
pushint 1
pushbytes "asset_1_protocol_fees"
app_local_get
+
-
store 4 // asset_1_amount
pushint 1
load 3 // asset_2_id
callsub __func__get_balance
pushint 1
pushbytes "asset_2_reserves"
app_local_get
pushint 1
pushbytes "asset_2_protocol_fees"
app_local_get
+
-
store 5 // asset_2_amount
load 4 // asset_1_amount
load 5 // asset_2_amount
||
assert
load 2 // asset_1_id
load 4 // asset_1_amount
load 1 // pool_address
pushbytes "fee_collector"
app_global_get
callsub __func__transfer
load 3 // asset_2_id
load 5 // asset_2_amount
load 1 // pool_address
pushbytes "fee_collector"
app_global_get
callsub __func__transfer
pushint 1
return
main__set_fee:
load 0 // user_address
pushbytes "fee_setter"
app_global_get
==
assert
txna ApplicationArgs 1
btoi
store 1 // total_fee_share
txna ApplicationArgs 2
btoi
store 2 // protocol_fee_ratio
load 1 // total_fee_share
pushint 100
<=
assert
load 1 // total_fee_share
pushint 1
>=
assert
load 2 // protocol_fee_ratio
pushint 10
<=
assert
load 2 // protocol_fee_ratio
pushint 3
>=
assert
pushint 1
pushbytes "total_fee_share"
load 1 // total_fee_share
app_local_put
pushint 1
pushbytes "protocol_fee_ratio"
load 2 // protocol_fee_ratio
app_local_put
pushint 1
return
main__amm:
txna Accounts 1
store 1 // pool_address
pushint 1
pushbytes "asset_1_id"
app_local_get
store 2 // asset_1_id
pushint 1
pushbytes "asset_2_id"
app_local_get
store 3 // asset_2_id
pushint 1
pushbytes "pool_token_asset_id"
app_local_get
store 4 // pool_token_asset_id
pushint 1
pushbytes "asset_1_reserves"
app_local_get
store 5 // asset_1_reserves
pushint 1
pushbytes "asset_2_reserves"
app_local_get
store 6 // asset_2_reserves
pushint 1
pushbytes "issued_pool_tokens"
app_local_get
store 7 // issued_pool_tokens
pushint 1
pushbytes "asset_1_protocol_fees"
app_local_get
store 8 // asset_1_protocol_fees
pushint 1
pushbytes "asset_2_protocol_fees"
app_local_get
store 9 // asset_2_protocol_fees
txna ApplicationArgs 0
pushbytes "verify_flash_swap"
==
pushint 1
pushbytes "lock"
app_local_get
pushint 0
==
||
assert
txna ApplicationArgs 0
pushbytes "add_liquidity"
==
bnz main__amm__add_liquidity
txna ApplicationArgs 0
pushbytes "remove_liquidity"
==
bnz main__amm__remove_liquidity
txna ApplicationArgs 0
pushbytes "swap"
==
bnz main__amm__swap
txna ApplicationArgs 0
pushbytes "flash_loan"
==
bnz main__amm__flash_loan
txna ApplicationArgs 0
pushbytes "verify_flash_loan"
==
bnz main__amm__verify_flash_loan
txna ApplicationArgs 0
pushbytes "flash_swap"
==
bnz main__amm__flash_swap
txna ApplicationArgs 0
pushbytes "verify_flash_swap"
==
bnz main__amm__verify_flash_swap
err // unexpected value
main__amm__swap:
callsub main__amm__func__update_price_oracle
load 5 // asset_1_reserves
itob
load 6 // asset_2_reserves
itob
b*
store 10 // k_initial
txn GroupIndex
pushint 1
-
store 11 // input_txn_index
txna ApplicationArgs 1
btoi
store 12 // min_output
txna ApplicationArgs 2
store 13 // mode
load 11 // input_txn_index
gtxns TypeEnum
pushint 1 // Pay
==
bz l3_elif_0
load 11 // input_txn_index
gtxns Receiver
load 1 // pool_address
==
assert
pushint 0
store 14 // input_asset_id
load 11 // input_txn_index
gtxns Amount
store 16 // input_amount
b l3_end
l3_elif_0:
load 11 // input_txn_index
gtxns TypeEnum
pushint 4 // Axfer
==
bz l3_else
load 11 // input_txn_index
gtxns AssetReceiver
load 1 // pool_address
==
assert
load 11 // input_txn_index
gtxns XferAsset
store 14 // input_asset_id
load 11 // input_txn_index
gtxns AssetAmount
store 16 // input_amount
b l3_end
l3_else:
err
l3_end: // end
load 11 // input_txn_index
gtxns Sender
load 0 // user_address
==
assert
load 14 // input_asset_id
load 2 // asset_1_id
==
bz l4_elif_0
load 3 // asset_2_id
store 15 // output_asset_id
load 5 // asset_1_reserves
store 17 // input_supply
load 6 // asset_2_reserves
store 18 // output_supply
b l4_end
l4_elif_0:
load 14 // input_asset_id
load 3 // asset_2_id
==
bz l4_else
load 2 // asset_1_id
store 15 // output_asset_id
load 6 // asset_2_reserves
store 17 // input_supply
load 5 // asset_1_reserves
store 18 // output_supply
b l4_end
l4_else:
err
l4_end: // end
pushint 0
store 24 // change
load 13 // mode
pushbytes "fixed-input"
==
bz l5_elif_0
load 16 // input_amount
callsub __func__calculate_fixed_input_fee_amounts
store 19 // total_fee_amount
store 20 // poolers_fee_amount
store 21 // protocol_fee_amount
load 16 // input_amount
load 19 // total_fee_amount
-
store 22 // swap_amount
load 17 // input_supply
load 18 // output_supply
load 22 // swap_amount
callsub __func__calculate_fixed_input_swap
store 23 // output_amount
load 19 // total_fee_amount
assert // If the amount is too small, total fee amount is rounded to 0.
load 23 // output_amount
load 12 // min_output
>=
assert
b l5_end
l5_elif_0:
load 13 // mode
pushbytes "fixed-output"
==
bz l5_else
load 12 // min_output
store 23 // output_amount
load 17 // input_supply
load 18 // output_supply
load 23 // output_amount
callsub __func__calculate_fixed_output_swap
store 22 // swap_amount
load 22 // swap_amount
callsub __func__calculate_fixed_output_fee_amounts
store 19 // total_fee_amount
store 20 // poolers_fee_amount
store 21 // protocol_fee_amount
load 22 // swap_amount
load 19 // total_fee_amount
+
store 25 // required_input_amount
load 19 // total_fee_amount
assert // If the amount is too small, total fee amount is rounded to 0.
load 16 // input_amount
load 25 // required_input_amount
>=
assert
load 16 // input_amount
load 25 // required_input_amount
-
store 24 // change
load 24 // change
bz l6_end
load 14 // input_asset_id
load 24 // change
callsub main__amm__func__transfer_to_user
l6_end: // end
b l5_end
l5_else:
err
l5_end: // end
load 14 // input_asset_id
load 2 // asset_1_id
==
bz l7_else
load 8 // asset_1_protocol_fees
load 21 // protocol_fee_amount
+
store 8 // asset_1_protocol_fees
load 5 // asset_1_reserves
load 22 // swap_amount
load 20 // poolers_fee_amount
+
+
store 5 // asset_1_reserves
load 6 // asset_2_reserves
load 23 // output_amount
-
store 6 // asset_2_reserves
b l7_end
l7_else:
load 9 // asset_2_protocol_fees
load 21 // protocol_fee_amount
+
store 9 // asset_2_protocol_fees
load 6 // asset_2_reserves
load 22 // swap_amount
load 20 // poolers_fee_amount
+
+
store 6 // asset_2_reserves
load 5 // asset_1_reserves
load 23 // output_amount
-
store 5 // asset_1_reserves
l7_end: // end
load 10 // k_initial
load 5 // asset_1_reserves
itob
load 6 // asset_2_reserves
itob
b*
b<
assert // Assert K<K'
load 15 // output_asset_id
load 23 // output_amount
callsub main__amm__func__transfer_to_user
pushbytes "input_asset_id %i"
load 14 // input_asset_id
itob
concat
log
pushbytes "input_amount %i"
load 16 // input_amount
itob
concat
log
pushbytes "swap_amount %i"
load 22 // swap_amount
itob
concat
log
pushbytes "change %i"
load 24 // change
itob
concat
log
pushbytes "output_asset_id %i"
load 15 // output_asset_id
itob
concat
log
pushbytes "output_amount %i"
load 23 // output_amount
itob
concat
log
pushbytes "poolers_fee_amount %i"
load 20 // poolers_fee_amount
itob
concat
log
pushbytes "protocol_fee_amount %i"
load 21 // protocol_fee_amount
itob
concat
log
pushbytes "total_fee_amount %i"
load 19 // total_fee_amount
itob
concat
log
pushint 1
pushbytes "asset_1_reserves"
load 5 // asset_1_reserves
app_local_put
pushint 1
pushbytes "asset_2_reserves"
load 6 // asset_2_reserves
app_local_put
pushint 1
pushbytes "asset_1_protocol_fees"
load 8 // asset_1_protocol_fees
app_local_put
pushint 1
pushbytes "asset_2_protocol_fees"
load 9 // asset_2_protocol_fees
app_local_put
pushint 1
return
main__amm__flash_loan:
callsub main__amm__func__update_price_oracle
txna ApplicationArgs 1
btoi
store 10 // index_diff
txn GroupIndex
load 10 // index_diff
+
store 11 // verify_flash_loan_txn_index
load 11 // verify_flash_loan_txn_index
gtxns TypeEnum
pushint 6 // Appl
==
assert
load 11 // verify_flash_loan_txn_index
gtxns ApplicationID
global CurrentApplicationID
==
assert
load 11 // verify_flash_loan_txn_index
gtxnsa ApplicationArgs 0
pushbytes "verify_flash_loan"
==
assert
load 11 // verify_flash_loan_txn_index
gtxnsa ApplicationArgs 1
txna ApplicationArgs 1
==
assert // index_diff
load 11 // verify_flash_loan_txn_index
gtxns Sender
load 0 // user_address
==
assert
txna ApplicationArgs 2
btoi
store 12 // asset_1_amount
txna ApplicationArgs 3
btoi
store 13 // asset_2_amount
load 12 // asset_1_amount
load 13 // asset_2_amount
||
assert
load 12 // asset_1_amount
bz l8_end
load 12 // asset_1_amount
load 5 // asset_1_reserves
<=
assert
load 2 // asset_1_id
load 12 // asset_1_amount
callsub main__amm__func__transfer_to_user
l8_end: // end
load 13 // asset_2_amount
bz l9_end
load 13 // asset_2_amount
load 6 // asset_2_reserves
<=
assert
load 3 // asset_2_id
load 13 // asset_2_amount
callsub main__amm__func__transfer_to_user
l9_end: // end
pushint 1
return
main__amm__verify_flash_loan:
txna ApplicationArgs 1
btoi
store 10 // index_diff
txn GroupIndex
load 10 // index_diff
-
store 11 // flash_loan_txn_index
load 11 // flash_loan_txn_index
gtxns TypeEnum
pushint 6 // Appl
==
assert
load 11 // flash_loan_txn_index
gtxns ApplicationID
global CurrentApplicationID
==
assert
load 11 // flash_loan_txn_index
gtxnsa ApplicationArgs 0
pushbytes "flash_loan"
==
assert
load 11 // flash_loan_txn_index
gtxnsa ApplicationArgs 1
txna ApplicationArgs 1
==
assert // index_diff
load 11 // flash_loan_txn_index
gtxns Sender
load 0 // user_address
==
assert
load 11 // flash_loan_txn_index
gtxnsa ApplicationArgs 2
btoi
store 12 // asset_1_output_amount
load 11 // flash_loan_txn_index
gtxnsa ApplicationArgs 3
btoi
store 13 // asset_2_output_amount
load 12 // asset_1_output_amount
bz l10_end
load 12 // asset_1_output_amount
callsub __func__calculate_fixed_input_fee_amounts
store 14 // asset_1_total_fee_amount
store 15 // asset_1_poolers_fee_amount
store 16 // asset_1_protocol_fee_amount
load 12 // asset_1_output_amount
load 14 // asset_1_total_fee_amount
+
store 17 // asset_1_repayment_amount
load 17 // asset_1_repayment_amount
load 12 // asset_1_output_amount
>
assert
load 13 // asset_2_output_amount
bz l11_else
txn GroupIndex
pushint 2
-
store 18 // asset_1_txn_index
b l11_end
l11_else:
txn GroupIndex
pushint 1
-
store 18 // asset_1_txn_index
l11_end: // end
load 18 // asset_1_txn_index
gtxns TypeEnum
pushint 4 // Axfer
==
assert
load 18 // asset_1_txn_index
gtxns XferAsset
load 2 // asset_1_id
==
assert
load 18 // asset_1_txn_index
gtxns Sender
load 0 // user_address
==
assert
load 18 // asset_1_txn_index
gtxns AssetReceiver
load 1 // pool_address
==
assert
load 18 // asset_1_txn_index
gtxns AssetAmount
load 17 // asset_1_repayment_amount
>=
assert
load 18 // asset_1_txn_index
gtxns AssetAmount
store 19 // asset_1_input_amount
load 19 // asset_1_input_amount
load 17 // asset_1_repayment_amount
-
store 20 // asset_1_donation_amount
load 8 // asset_1_protocol_fees
load 16 // asset_1_protocol_fee_amount
+
store 8 // asset_1_protocol_fees
load 5 // asset_1_reserves
load 15 // asset_1_poolers_fee_amount
+
store 5 // asset_1_reserves
pushbytes "asset_1_output_amount %i"
load 12 // asset_1_output_amount
itob
concat
log
pushbytes "asset_1_input_amount %i"
load 19 // asset_1_input_amount
itob
concat
log
pushbytes "asset_1_donation_amount %i"
load 20 // asset_1_donation_amount
itob
concat
log
pushbytes "asset_1_poolers_fee_amount %i"
load 15 // asset_1_poolers_fee_amount
itob
concat
log
pushbytes "asset_1_protocol_fee_amount %i"
load 16 // asset_1_protocol_fee_amount
itob
concat
log
pushbytes "asset_1_total_fee_amount %i"
load 14 // asset_1_total_fee_amount
itob
concat
log
l10_end: // end
load 13 // asset_2_output_amount
bz l12_end
load 13 // asset_2_output_amount
callsub __func__calculate_fixed_input_fee_amounts
store 21 // asset_2_total_fee_amount
store 22 // asset_2_poolers_fee_amount
store 23 // asset_2_protocol_fee_amount
load 13 // asset_2_output_amount
load 21 // asset_2_total_fee_amount
+
store 24 // asset_2_repayment_amount
load 24 // asset_2_repayment_amount
load 13 // asset_2_output_amount
>
assert
txn GroupIndex
pushint 1
-
store 25 // asset_2_txn_index
load 3 // asset_2_id
pushint 0
==
bz l13_else
load 25 // asset_2_txn_index
gtxns TypeEnum
pushint 1 // Pay
==
assert
load 25 // asset_2_txn_index
gtxns Sender
load 0 // user_address
==
assert
load 25 // asset_2_txn_index
gtxns Receiver
load 1 // pool_address
==
assert
load 25 // asset_2_txn_index
gtxns Amount
load 24 // asset_2_repayment_amount
>=
assert
load 25 // asset_2_txn_index
gtxns Amount
store 26 // asset_2_input_amount
b l13_end
l13_else:
load 25 // asset_2_txn_index
gtxns TypeEnum
pushint 4 // Axfer
==
assert
load 25 // asset_2_txn_index
gtxns XferAsset
load 3 // asset_2_id
==
assert
load 25 // asset_2_txn_index
gtxns Sender
load 0 // user_address
==
assert
load 25 // asset_2_txn_index
gtxns AssetReceiver
load 1 // pool_address
==
assert
load 25 // asset_2_txn_index
gtxns AssetAmount
load 24 // asset_2_repayment_amount
>=
assert
load 25 // asset_2_txn_index
gtxns AssetAmount
store 26 // asset_2_input_amount
l13_end: // end
load 26 // asset_2_input_amount
load 24 // asset_2_repayment_amount
-
store 27 // asset_2_donation_amount
load 9 // asset_2_protocol_fees
load 23 // asset_2_protocol_fee_amount
+
store 9 // asset_2_protocol_fees
load 6 // asset_2_reserves
load 22 // asset_2_poolers_fee_amount
+
store 6 // asset_2_reserves
pushbytes "asset_2_output_amount %i"
load 13 // asset_2_output_amount
itob
concat
log
pushbytes "asset_2_input_amount %i"
load 26 // asset_2_input_amount
itob
concat
log
pushbytes "asset_2_donation_amount %i"
load 27 // asset_2_donation_amount
itob
concat
log
pushbytes "asset_2_poolers_fee_amount %i"
load 22 // asset_2_poolers_fee_amount
itob
concat
log
pushbytes "asset_2_protocol_fee_amount %i"
load 23 // asset_2_protocol_fee_amount
itob
concat
log
pushbytes "asset_2_total_fee_amount %i"
load 21 // asset_2_total_fee_amount
itob
concat
log
l12_end: // end
pushint 1
pushbytes "asset_1_reserves"
load 5 // asset_1_reserves
app_local_put
pushint 1
pushbytes "asset_2_reserves"
load 6 // asset_2_reserves
app_local_put
pushint 1
pushbytes "asset_1_protocol_fees"
load 8 // asset_1_protocol_fees
app_local_put
pushint 1
pushbytes "asset_2_protocol_fees"
load 9 // asset_2_protocol_fees
app_local_put
pushint 1
return
main__amm__flash_swap:
pushint 1
pushbytes "lock"
pushint 1
app_local_put
callsub main__amm__func__update_price_oracle
txna ApplicationArgs 1
btoi
store 10 // index_diff
txn GroupIndex
load 10 // index_diff
+
store 11 // verify_flash_swap_txn_index
load 11 // verify_flash_swap_txn_index
gtxns TypeEnum
pushint 6 // Appl
==
assert
load 11 // verify_flash_swap_txn_index
gtxns ApplicationID
global CurrentApplicationID
==
assert
load 11 // verify_flash_swap_txn_index
gtxnsa ApplicationArgs 0
pushbytes "verify_flash_swap"
==
assert
load 11 // verify_flash_swap_txn_index
gtxnsa ApplicationArgs 1
txna ApplicationArgs 1
==
assert // index_diff
load 11 // verify_flash_swap_txn_index
gtxns Sender
load 0 // user_address
==
assert
txna ApplicationArgs 2
btoi
store 12 // asset_1_output_amount
txna ApplicationArgs 3
btoi
store 13 // asset_2_output_amount
load 12 // asset_1_output_amount
load 13 // asset_2_output_amount
||
assert
load 12 // asset_1_output_amount
bz l14_end
load 2 // asset_1_id
load 12 // asset_1_output_amount
callsub main__amm__func__transfer_to_user
l14_end: // end
load 13 // asset_2_output_amount
bz l15_end
load 3 // asset_2_id
load 13 // asset_2_output_amount
callsub main__amm__func__transfer_to_user
l15_end: // end
load 5 // asset_1_reserves
itob
load 6 // asset_2_reserves
itob
b*
log
pushint 1
load 2 // asset_1_id
callsub __func__get_balance
itob
log
pushint 1
load 3 // asset_2_id
callsub __func__get_balance
itob
log
pushint 1
return
main__amm__verify_flash_swap:
txna ApplicationArgs 1
btoi
store 10 // index_diff
txn GroupIndex
load 10 // index_diff
-
store 11 // flash_swap_txn_index
load 11 // flash_swap_txn_index
gtxns TypeEnum
pushint 6 // Appl
==
assert
load 11 // flash_swap_txn_index
gtxns ApplicationID
global CurrentApplicationID
==
assert
load 11 // flash_swap_txn_index
gtxnsa ApplicationArgs 0
pushbytes "flash_swap"
==
assert
load 11 // flash_swap_txn_index
gtxnsa ApplicationArgs 1
txna ApplicationArgs 1
==
assert // index_diff
load 11 // flash_swap_txn_index
gtxnsa ApplicationArgs 2
btoi
store 12 // asset_1_output_amount
load 11 // flash_swap_txn_index
gtxnsa ApplicationArgs 3
btoi
store 13 // asset_2_output_amount
load 11 // flash_swap_txn_index
gtxnsa Logs 0
store 14 // initial_k
load 11 // flash_swap_txn_index
gtxnsa Logs 1
btoi
store 15 // asset_1_balance_after_transfer
load 11 // flash_swap_txn_index
gtxnsa Logs 2
btoi
store 16 // asset_2_balance_after_transfer
pushint 1
load 2 // asset_1_id
callsub __func__get_balance
store 17 // asset_1_balance
pushint 1
load 3 // asset_2_id
callsub __func__get_balance
store 18 // asset_2_balance
pushint 0
store 19 // asset_1_input_amount
load 17 // asset_1_balance
load 15 // asset_1_balance_after_transfer
>
bz l16_end
load 17 // asset_1_balance
load 15 // asset_1_balance_after_transfer
-
store 19 // asset_1_input_amount
l16_end: // end
pushint 0
store 20 // asset_2_input_amount
load 18 // asset_2_balance
load 16 // asset_2_balance_after_transfer
>
bz l17_end
load 18 // asset_2_balance
load 16 // asset_2_balance_after_transfer
-
store 20 // asset_2_input_amount
l17_end: // end
pushint 0
store 21 // asset_1_total_fee_amount
pushint 0
store 22 // asset_1_poolers_fee_amount
pushint 0
store 23 // asset_1_protocol_fee_amount
load 19 // asset_1_input_amount
bz l18_else
load 19 // asset_1_input_amount
callsub __func__calculate_fixed_input_fee_amounts
store 21 // asset_1_total_fee_amount
store 22 // asset_1_poolers_fee_amount
store 23 // asset_1_protocol_fee_amount
load 8 // asset_1_protocol_fees
load 23 // asset_1_protocol_fee_amount
+
store 8 // asset_1_protocol_fees
load 5 // asset_1_reserves
load 12 // asset_1_output_amount
-
load 19 // asset_1_input_amount
load 23 // asset_1_protocol_fee_amount
-
+
store 5 // asset_1_reserves
b l18_end
l18_else:
load 5 // asset_1_reserves
load 12 // asset_1_output_amount
-
store 5 // asset_1_reserves
l18_end: // end
pushint 0
store 24 // asset_2_total_fee_amount
pushint 0
store 25 // asset_2_poolers_fee_amount
pushint 0
store 26 // asset_2_protocol_fee_amount
load 20 // asset_2_input_amount
bz l19_else
load 20 // asset_2_input_amount
callsub __func__calculate_fixed_input_fee_amounts
store 24 // asset_2_total_fee_amount
store 25 // asset_2_poolers_fee_amount
store 26 // asset_2_protocol_fee_amount
load 9 // asset_2_protocol_fees
load 26 // asset_2_protocol_fee_amount
+
store 9 // asset_2_protocol_fees
load 6 // asset_2_reserves
load 13 // asset_2_output_amount
-
load 20 // asset_2_input_amount
load 26 // asset_2_protocol_fee_amount
-
+
store 6 // asset_2_reserves
b l19_end
l19_else:
load 6 // asset_2_reserves
load 13 // asset_2_output_amount
-
store 6 // asset_2_reserves
l19_end: // end
load 14 // initial_k
load 5 // asset_1_reserves
load 22 // asset_1_poolers_fee_amount
-
itob
load 6 // asset_2_reserves
load 25 // asset_2_poolers_fee_amount
-
itob
b*
b<
assert // Initial K < New K
pushbytes "asset_1_output_amount %i"
load 12 // asset_1_output_amount
itob
concat
log
pushbytes "asset_1_input_amount %i"
load 19 // asset_1_input_amount
itob
concat
log
pushbytes "asset_1_poolers_fee_amount %i"
load 22 // asset_1_poolers_fee_amount
itob
concat
log
pushbytes "asset_1_protocol_fee_amount %i"
load 23 // asset_1_protocol_fee_amount
itob
concat
log
pushbytes "asset_1_total_fee_amount %i"
load 21 // asset_1_total_fee_amount
itob
concat
log
pushbytes "asset_2_output_amount %i"
load 13 // asset_2_output_amount
itob
concat
log
pushbytes "asset_2_input_amount %i"
load 20 // asset_2_input_amount
itob
concat
log
pushbytes "asset_2_poolers_fee_amount %i"
load 25 // asset_2_poolers_fee_amount
itob
concat
log
pushbytes "asset_2_protocol_fee_amount %i"
load 26 // asset_2_protocol_fee_amount
itob
concat
log
pushbytes "asset_2_total_fee_amount %i"
load 24 // asset_2_total_fee_amount
itob
concat
log
pushint 1
pushbytes "lock"
pushint 0
app_local_put
pushint 1
pushbytes "asset_1_reserves"
load 5 // asset_1_reserves
app_local_put
pushint 1
pushbytes "asset_2_reserves"
load 6 // asset_2_reserves
app_local_put
pushint 1
pushbytes "asset_1_protocol_fees"
load 8 // asset_1_protocol_fees
app_local_put
pushint 1
pushbytes "asset_2_protocol_fees"
load 9 // asset_2_protocol_fees
app_local_put
pushint 1
return
main__amm__add_liquidity:
txn GroupIndex
pushint 2
-
store 10 // asset_1_txn_index
txn GroupIndex
pushint 1
-
store 11 // asset_2_txn_index
load 10 // asset_1_txn_index
gtxns TypeEnum
pushint 4 // Axfer
==
assert
load 10 // asset_1_txn_index
gtxns AssetReceiver
load 1 // pool_address
==
assert
load 10 // asset_1_txn_index
gtxns XferAsset
load 2 // asset_1_id
==
assert
load 10 // asset_1_txn_index
gtxns Sender
load 0 // user_address
==
assert
load 10 // asset_1_txn_index
gtxns AssetAmount
store 12 // asset_1_amount
load 3 // asset_2_id
pushint 0
==
bz l20_else
load 11 // asset_2_txn_index
gtxns TypeEnum
pushint 1 // Pay
==
assert
load 11 // asset_2_txn_index
gtxns Receiver
load 1 // pool_address
==
assert
load 11 // asset_2_txn_index
gtxns Amount
store 13 // asset_2_amount
b l20_end
l20_else:
load 11 // asset_2_txn_index
gtxns TypeEnum
pushint 4 // Axfer
==
assert
load 11 // asset_2_txn_index
gtxns AssetReceiver
load 1 // pool_address
==
assert
load 11 // asset_2_txn_index
gtxns XferAsset
load 3 // asset_2_id
==
assert
load 11 // asset_2_txn_index
gtxns AssetAmount
store 13 // asset_2_amount
l20_end: // end
load 11 // asset_2_txn_index
gtxns Sender
load 0 // user_address
==
assert
load 7 // issued_pool_tokens
bz l21_else
load 12 // asset_1_amount
itob
load 7 // issued_pool_tokens
itob
b*
store 15 // a_temp
load 13 // asset_2_amount
itob
load 7 // issued_pool_tokens
itob
b*
store 16 // b_temp
load 15 // a_temp
load 5 // asset_1_reserves
itob
b/
btoi
store 17 // pool_tokens_output_a
load 16 // b_temp
load 6 // asset_2_reserves
itob
b/
btoi
store 18 // pool_tokens_output_b
load 17 // pool_tokens_output_a
load 18 // pool_tokens_output_b
>
bz l22_else
load 18 // pool_tokens_output_b
store 14 // pool_tokens_out
load 14 // pool_tokens_out
itob
load 5 // asset_1_reserves
itob
b*
load 7 // issued_pool_tokens
itob
b/
btoi
store 19 // expected_asset_1_amount
load 16 // b_temp
load 6 // asset_2_reserves
itob
b%
btoi
bz l23_end
load 19 // expected_asset_1_amount
pushint 1
+
store 19 // expected_asset_1_amount
l23_end: // end
load 12 // asset_1_amount
load 19 // expected_asset_1_amount
-
store 20 // asset_1_change
load 19 // expected_asset_1_amount
store 12 // asset_1_amount
load 2 // asset_1_id
load 20 // asset_1_change
callsub main__amm__func__transfer_to_user
b l22_end
l22_else:
load 17 // pool_tokens_output_a
store 14 // pool_tokens_out
load 14 // pool_tokens_out
itob
load 6 // asset_2_reserves
itob
b*
load 7 // issued_pool_tokens
itob
b/
btoi
store 21 // expected_asset_2_amount
load 15 // a_temp
load 5 // asset_1_reserves
itob
b%
btoi
bz l24_end
load 21 // expected_asset_2_amount
pushint 1
+
store 21 // expected_asset_2_amount
l24_end: // end
load 13 // asset_2_amount
load 21 // expected_asset_2_amount
-
store 22 // asset_2_change
load 21 // expected_asset_2_amount
store 13 // asset_2_amount
load 3 // asset_2_id
load 22 // asset_2_change
callsub main__amm__func__transfer_to_user
l22_end: // end
load 7 // issued_pool_tokens
load 14 // pool_tokens_out
+
store 7 // issued_pool_tokens
load 5 // asset_1_reserves
load 12 // asset_1_amount
+
store 5 // asset_1_reserves
load 6 // asset_2_reserves
load 13 // asset_2_amount
+
store 6 // asset_2_reserves
b l21_end
l21_else:
load 12 // asset_1_amount
itob
load 13 // asset_2_amount
itob
b*
bsqrt
btoi
store 7 // issued_pool_tokens
load 7 // issued_pool_tokens
pushint 1000 // LOCKED_POOL_TOKENS
>=
assert
load 7 // issued_pool_tokens
pushint 1000 // LOCKED_POOL_TOKENS
-
store 14 // pool_tokens_out
load 12 // asset_1_amount
store 5 // asset_1_reserves
load 13 // asset_2_amount
store 6 // asset_2_reserves
l21_end: // end
load 14 // pool_tokens_out
assert
load 4 // pool_token_asset_id
load 14 // pool_tokens_out
callsub main__amm__func__transfer_to_user
pushint 1
pushbytes "asset_1_reserves"
load 5 // asset_1_reserves
app_local_put
pushint 1
pushbytes "asset_2_reserves"
load 6 // asset_2_reserves
app_local_put
pushint 1
pushbytes "issued_pool_tokens"
load 7 // issued_pool_tokens
app_local_put
pushint 1
return
main__amm__remove_liquidity:
txn GroupIndex
pushint 1
-
store 10 // pool_token_txn_index
load 10 // pool_token_txn_index
gtxns TypeEnum
pushint 4 // Axfer
==
assert
load 10 // pool_token_txn_index
gtxns AssetReceiver
load 1 // pool_address
==
assert
load 10 // pool_token_txn_index
gtxns XferAsset
load 4 // pool_token_asset_id
==
assert
load 10 // pool_token_txn_index
gtxns Sender
load 0 // user_address
==
assert
load 10 // pool_token_txn_index
gtxns AssetAmount
store 11 // removed_pool_token_amount
load 11 // removed_pool_token_amount
pushint 1000 // LOCKED_POOL_TOKENS
+
load 7 // issued_pool_tokens
==
bz l25_else
load 5 // asset_1_reserves
store 12 // asset_1_amount
load 6 // asset_2_reserves
store 13 // asset_2_amount
load 7 // issued_pool_tokens
store 11 // removed_pool_token_amount
b l25_end
l25_else:
load 11 // removed_pool_token_amount
itob
load 5 // asset_1_reserves
itob
b*
load 7 // issued_pool_tokens
itob
b/
btoi
store 12 // asset_1_amount
load 11 // removed_pool_token_amount
itob
load 6 // asset_2_reserves
itob
b*
load 7 // issued_pool_tokens
itob
b/
btoi
store 13 // asset_2_amount
l25_end: // end
load 12 // asset_1_amount
load 13 // asset_2_amount
&&
assert
load 2 // asset_1_id
load 12 // asset_1_amount
callsub main__amm__func__transfer_to_user
load 3 // asset_2_id
load 13 // asset_2_amount
callsub main__amm__func__transfer_to_user
pushint 1
pushbytes "asset_1_reserves"
load 5 // asset_1_reserves
load 12 // asset_1_amount
-
app_local_put
pushint 1
pushbytes "asset_2_reserves"
load 6 // asset_2_reserves
load 13 // asset_2_amount
-
app_local_put
pushint 1
pushbytes "issued_pool_tokens"
load 7 // issued_pool_tokens
load 11 // removed_pool_token_amount
-
app_local_put
pushint 1
return
main__amm__func__transfer_to_user:
store 28 // amount
store 29 // asset_id
load 29 // asset_id
load 28 // amount
load 1 // pool_address
load 0 // user_address
callsub __func__transfer
retsub
main__amm__func__update_price_oracle:
pushint 1
pushbytes "asset_1_cumulative_price"
app_local_get
store 30 // asset_1_cumulative_price
pushint 1
pushbytes "asset_2_cumulative_price"
app_local_get
store 31 // asset_2_cumulative_price
global LatestTimestamp
pushint 1
pushbytes "cumulative_price_update_timestamp"
app_local_get
-
store 32 // time_delta
load 7 // issued_pool_tokens
load 32 // time_delta
&&
bz l26_end
load 30 // asset_1_cumulative_price
load 6 // asset_2_reserves
itob
pushbytes "\x01\x00\x00\x00\x00\x00\x00\x00\x00" // TWO_TO_THE_64
b*
load 32 // time_delta
itob
b*
load 5 // asset_1_reserves
itob
b/
b+
store 30 // asset_1_cumulative_price
load 31 // asset_2_cumulative_price
load 5 // asset_1_reserves
itob
pushbytes "\x01\x00\x00\x00\x00\x00\x00\x00\x00" // TWO_TO_THE_64
b*
load 32 // time_delta
itob
b*
load 6 // asset_2_reserves
itob
b/
b+
store 31 // asset_2_cumulative_price
pushint 1
pushbytes "asset_1_cumulative_price"
load 30 // asset_1_cumulative_price
app_local_put
pushint 1
pushbytes "asset_2_cumulative_price"
load 31 // asset_2_cumulative_price
app_local_put
pushint 1
pushbytes "cumulative_price_update_timestamp"
global LatestTimestamp
app_local_put
l26_end: // end
retsub
__func__calculate_fixed_input_fee_amounts:
store 33 // input_amount
pushint 1
pushbytes "total_fee_share"
app_local_get
store 34 // total_fee_share
pushint 1
pushbytes "protocol_fee_ratio"
app_local_get
store 35 // protocol_fee_ratio
load 33 // input_amount
load 34 // total_fee_share
*
pushint 10000
/
store 36 // total_fee
load 36 // total_fee
load 35 // protocol_fee_ratio
/
store 37 // protocol_fee
load 36 // total_fee
load 37 // protocol_fee
-
store 38 // poolers_fee
load 37 // protocol_fee
load 38 // poolers_fee
load 36 // total_fee
retsub
__func__calculate_fixed_output_fee_amounts:
store 39 // swap_amount
pushint 1
pushbytes "total_fee_share"
app_local_get
store 40 // total_fee_share
pushint 1
pushbytes "protocol_fee_ratio"
app_local_get
store 41 // protocol_fee_ratio
load 39 // swap_amount
pushint 10000
*
pushint 10000
load 40 // total_fee_share
-
/
store 42 // input_amount
load 42 // input_amount
load 40 // total_fee_share
*
pushint 10000
/
store 43 // total_fee
load 43 // total_fee
load 41 // protocol_fee_ratio
/
store 44 // protocol_fee
load 43 // total_fee
load 44 // protocol_fee
-
store 45 // poolers_fee
load 44 // protocol_fee
load 45 // poolers_fee
load 43 // total_fee
retsub
__func__calculate_fixed_input_swap:
store 46 // swap_amount
store 47 // output_supply
store 48 // input_supply
load 48 // input_supply
itob
load 47 // output_supply
itob
b*
store 49 // k
load 47 // output_supply
load 49 // k
load 48 // input_supply
load 46 // swap_amount
+
itob
b/
btoi
pushint 1
+
-
store 50 // output_amount
load 50 // output_amount
retsub
__func__calculate_fixed_output_swap:
store 51 // output_amount
store 52 // output_supply
store 53 // input_supply
load 53 // input_supply
itob
load 52 // output_supply
itob
b*
store 54 // k
load 54 // k
load 52 // output_supply
load 51 // output_amount
-
itob
b/
btoi
pushint 1
+
load 53 // input_supply
-
store 55 // input_amount
load 55 // input_amount
retsub
__func__get_balance:
store 56 // asset_id
store 57 // account_idx
pushint 0
store 58 // balance
load 56 // asset_id
pushint 0
==
bz l27_else
load 57 // account_idx
balance
load 57 // account_idx
min_balance
-
store 58 // balance
b l27_end
l27_else:
load 57 // account_idx
load 56 // asset_id
asset_holding_get AssetBalance
pop // discarding value for _
store 58 // balance
l27_end: // end
load 58 // balance
retsub
__func__transfer:
store 59 // receiver
store 60 // sender
store 61 // amount
store 62 // asset_id
load 62 // asset_id
pushint 0
==
bz l28_else
itxn_begin
pushint 1 // Pay
itxn_field TypeEnum
load 60 // sender
itxn_field Sender
load 59 // receiver
itxn_field Receiver
load 61 // amount
itxn_field Amount
pushint 0
itxn_field Fee
itxn_submit
b l28_end
l28_else:
itxn_begin
pushint 4 // Axfer
itxn_field TypeEnum
load 60 // sender
itxn_field Sender
load 59 // receiver
itxn_field AssetReceiver
load 61 // amount
itxn_field AssetAmount
load 62 // asset_id
itxn_field XferAsset
pushint 0
itxn_field Fee
itxn_submit
l28_end: // end
retsub